
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /clients/{clientId} {
      // Allow reading and listing if authenticated
      allow read: if request.auth != null;
      // Allow creation only if the userId in the new document matches the user's auth uid
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow update and delete only if the userId in the existing document matches the user's auth uid
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /documents/{documentId} {
      // Allow reading and listing if authenticated (client-side query must enforce security)
      allow read: if request.auth != null;
      // Allow creation only if the userId in the new document matches the user's auth uid
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
       // Allow update and delete only if the userId in the existing document matches the user's auth uid
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /text_blocks/{blockId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /doc_templates/{templateId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /users/{userId} {
      // Allow user to create their own user document
      allow create: if request.resource.data.uid == userId;
      // Allow user to read and update their own document, but not delete it
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
  }
}

    