
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read and create their own user document.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == request.resource.data.uid;
    }
  
    // Users can only manage their own clients.
    match /clients/{clientId} {
      // Allow reading a list if the query is for the user's own documents.
      allow list: if request.auth != null && request.query.resource.__name__[0] == 'projects' && request.query.where.size() == 1 && request.query.where[0].field == 'userId' && request.query.where[0].op == '==' && request.query.where[0].value == request.auth.uid;
      // Allow reading a single document if it belongs to the user.
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      // Allow creating/updating/deleting if the document's userId matches the user's uid.
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can only manage their own text blocks.
    match /text_blocks/{textBlockId} {
      allow list: if request.auth != null && request.query.where[0].field == 'userId' && request.query.where[0].value == request.auth.uid;
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can only manage their own document templates.
    match /doc_templates/{templateId} {
      allow list: if request.auth != null && request.query.where[0].field == 'userId' && request.query.where[0].value == request.auth.uid;
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
